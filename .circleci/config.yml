orbs:
  browser-tools: circleci/browser-tools@1.2.2
version: 2.1
jobs:
  test:
    machine:
      image: android:202102-01
    # To optimize build times, we recommend "large" and above for Android-related jobs
    resource_class: large
    steps:
      - checkout
      # - run:
      #     name: test start
      #     command: |
      #       chmod 777 ./script/send_NotifyBot.sh
      #       ./script/send_NotifyBot.sh $CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM start
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: install mvn
          command: |
            sudo apt update -y
            sudo apt install maven -y
            sudo apt install aapt -y
      - run:
          name: Install appium server
          command: |
            curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt install nodejs
            node --version
            npm --version
            sudo npm update -g
            sudo npm install -g appium
            sudo npm install -g wd
            sudo npm install appium-doctor -g

      - run:
          name: Check install
          command: |
            google-chrome --version
            chromedriver --version
            mvn -version
            java -version
      - run:
          name: Start appium
          command: appium --session-over --allow-insecure chromedriver_autodownload
          background: true
      - run:
          name: Wait Until Appium Boot
          command: sleep 30
      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Launch emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - run:
          name: Wait for emulator to start
          command: |
            circle-android wait-for-boot
      # - run:
      #     # run in parallel with the emulator starting up, to optimize build time
      #     name: Run installDebug task
      #     command: |
      #       ./gradlew installDebug
      - run:
          name: Disable emulator animations
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: adb
          command: |
            adb devices
       #     chmod 777 ./script/adb_connect.sh
       #     ./script/adb_connect.sh
      # - run:
      #     name: sleep for 1 mins
      #     command: |
      #       sleep 9m
      # - run:
      #     name: sleep for 1 mins
      #     command: |
      #       sleep 9m
      # - run:
      #     name: sleep for 1 mins
      #     command: |
      #       sleep 9m
      # - run:
      #     name: sleep for 1 mins
      #     command: |
      #       sleep 9m
      # - run:
      #     name: sleep for 1 mins
      #     command: |
      #       sleep 9m
      - run:
          name: Run tests
          command: |
            ls
            mvn clean test -Dtest="app/src/test/java/com/example/androidautomationtest/base/listViewTest" -Dmaven.test.failure.ignore=true -Dsurefire.test.failure.ignore=true
      - run:
          name: sleep for 1 mins
          command: |
            sleep 1m
      - run:
          name: create directory
          command: |
            mkdir output
      - run:
          name: take screenshot
          command: |
            adb exec-out screencap -p > /home/circleci/project/output/screen.png
      - store_artifacts:
          path: /home/circleci/project/output
      - run:
          name: force stop app
          command: |
            adb shell am force-stop com.amity.integration.test
      # - run:
      #     name: test finish
      #     command: |
      #       ./script/send_NotifyBot.sh $CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM finish $CIRCLE_BUILD_URL
      #     when: always # Uploads code coverage results, pass or fail
workflows:
  build:
    jobs:
      - test
